<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="tv" class="polymorphism.chapter02.SamsungTV">
	<!-- id에는 이름 지정 규칙이 있지만, name에는 특수문자를 사용할 수 있고 이를 통해 URL을 지정할 수도 있음. 하지만 일반적으론 제약이 있는 id를 통해 명확한 코드 작성 선호. (id를 name처럼 써도 무방하긴 함.) --> 
	<!-- * init-Method: 객체에 초기 설정이 필요한 경우 그 과정을 수행하는 메소드를 객체의 멤버 메소드에서 지정 
	     * destroy-Method: 객체 제거시 그 이전에 수행되어야 하는 과정을 수행하는 메소드를 객체의 멤버 메소드에서 지정 
	     * lazy-init: ApplicationContext을 즉시 생성이 아닌 지연 생성으로 사용하고 싶은 경우 true, false로 지정 
	     * scope: 객체가 프로그램 전체에서 여러개 생성될 필요가 없는 경우 singleton, 여러개 필요한 경우 prototye로 지정 -->
		<constructor-arg index="0" ref="harmankadon"></constructor-arg> 
		<constructor-arg index="1" value="3400000"></constructor-arg>
	<!-- 스프링 컨테이너는 기본적으로 xml 파일에 등록된 bean 순서대로 객체를 생성하지만, injection으로 삽입된 외장스피커 객체가 먼저 생성됨. -->
	</bean>
	
	<bean id="philips" class="polymorphism.chapter03.PhilipsSpeaker" scope="prototype"></bean>
	<bean id="harmankadon" class="polymorphism.chapter03.HarmanKadonSpeaker" scope="prototype"></bean>
	<!-- 책에는 없는 코드이지만, 어차피 스피커를 취사선택해서 사용하기 때문에 필요할때만 생성하는게 낫지 않을까 해서 prototype 붙혀봄. -->
</beans>
